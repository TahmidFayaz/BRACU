# -*- coding: utf-8 -*-
"""CSE110-7.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1f-pPdXkTl16eG3cLsnk3OUboaKTAWHdf
"""

#task 1
def even_checker(x):
  if x%2 == 0:
    print("Even!!")
  else:
    print("Odd!!")
even_checker(5)

#task 2
def fibonacci(x):
  num1 = 0
  print(num1, end=" ")
  num2 = 1
  print(num2, end=" ")
  while True:
    result = num1 + num2
    if result <= x:
      print(result, end=" ")
    else:
      break
    num1 = num2
    num2 = result
fibonacci(10)

#task 3
def foo_moo(x):
  divisible = False
  result = ""
  if x%2 == 0:
    result += "Foo"
    divisible = True
  if x%3 == 0:
    result += "Moo"
    divisible = True
  if not divisible:
    result = "Boo"
  print(result)
foo_moo(6)

#task 4
def check_case(x):
  upper = 0
  lower = 0
  for i in x:
    if ord(i) in range(65,91):
      upper += 1
    if ord(i) in range(97,123):
      lower += 1
  print("No. of Uppercase characters:", upper)
  print("No. of Lowercase characters:", lower)
check_case('HaRRy PotteR')

#task 5
def calculate_tax(age, salary, job):
  if 10000 < salary < 20000:
    tax = salary*(5/100)
  if salary > 20000:
    tax = salary*(10/100)
  if salary < 10000:
    tax = 0
  if age < 18:
    tax = 0
  if job == "president":
    tax = 0
  print(tax)
calculate_tax(20, 18000, 'assistant manager')

#task 6
def days_converter(days):
  years = days//365
  months = days%365//30
  days = days%365%30
  print(f"{years} years, {months} months, {days} days")
days_converter(2250)

#task 7
def show_palindrome(num):
  ans= ""
  for i in range (1, num+1):
    ans+= str(i)
  for i in range (num-1, 0, -1):
    ans+= str(i)
  return int(ans)
show_palindrome(11)

#task 8
def show_palindrome(num):
  ans= ""
  for i in range (1, num+1):
    ans+= str(i)
  for i in range (num-1, 0, -1):
    ans+= str(i)
  return int(ans)

def show_palindromic_triangle(x):
  for i in range(1, x+1):
    print("  "*(x-i), end = "")
    for j in range(0, i):
      print(str(show_palindrome(x))[j], end = " ")
    for j in range(i-2, -1, -1):
      print(str(show_palindrome(x))[j], end = " ")
    print()
show_palindromic_triangle(5)

#task 9
import math
def area_circumference_generator(radius):
  return math.pi*math.pow(radius,2), 2*math.pi*radius
print(area_circumference_generator(1))
area, circumference = area_circumference_generator(1)
print(f"Area of the circle is {area} and circumference is {circumference}")

#task 10
def make_square(tup):
  dict1 = {}
  for i in range(tup[0], tup[1]+1):
    dict1[i] = i**2
  return dict1
make_square((5,9))

#task 11
def rem_duplicate(tup):
  tup1 = []
  for i in tup:
    if i not in tup1:
      tup1.append(i)
  return tuple(tup1)
print(rem_duplicate((1,1,1,2,3,4,5,6,6,6,6,4,0,0,0)))

#task 12
def rem_duplicate(l_in):
  l_out = []
  removed = 0
  for i in l_in:
    if l_out.count(i) < 2 :
      l_out.append(i)
    else:
      removed += 1
  print("Removed:", removed)
  return l_out
print(rem_duplicate([1, 2, 3, 3, 3, 3, 4, 5, 8, 8]))

#task 13
def calc(x, a, b):
  if x == "+":
    result = a + b
  if x == "-":
    result = a - b
  if x == "/":
    result = a / b
  if x == "*":
    result = a * b
  return result

opr = input()
op1 = int(input())
op2 = int(input())
print(calc(opr, op1, op2))

#task 14
def rem_chr(x, y):
  s_out = x[0]
  s_rem = ""
  for i in range(1,len(x)):
    if i%y == 0:
      s_rem += x[i]
    else:
      s_out += x[i]
  return s_out+s_rem

Sentence = input()
Position = int(input())
print(rem_chr(Sentence, Position))

#task 15
def cart_calc(x, y = "Dhanmondi"):
  for i in range(len(x)):
    x[i] = x[i][1: -1]

  d_list = {
  "Rice": 105,
  "Potato": 20,
  "Chicken": 250,
  "Beef": 510,
  "Oil": 85
  }
  total = 0

  for i in x:
    if i in d_list:
      total += d_list[i]
  if y == "Dhanmondi":
    total += 30
  else:
    total += 70
  return total

order_items = input()[1:-1].split(", ")
print(cart_calc(order_items, "Mohakhali"))

#task 16
def splitting_money(a):
  thou= a//500
  hund= a%500//100
  twen= a%500%100//20
  ten= a%500%100%20//10
  two= a%500%100%20%10//2
  return (thou, hund, twen, ten, two)

input1= int(input())
thou, hund, twen, ten, two = splitting_money(input1)
print(f"500 Taka: {thou} note(s) \n100 Taka: {hund} note(s) \n20 Taka: {twen} note(s) \n10 Taka: {ten} note(s) \n2 Taka: {two} note(s)")

#task 17
def remove_odd(a):
  l1= []
  for i in a:
    if i%2 ==0:
      l1.append(i)
  return l1

print(remove_odd ([21, 33, 44, 66, 11, 1, 88, 45, 10, 9]))

#task 18
def divisor(a,b,c,d):
  summation = 0
  for i in range(a,b):
    if i%c ==0 and i%d ==0 :
      pass
    elif i%c ==0 or i%d ==0:
      summation += i
  return summation
input1= int(input())
input2= int(input())
input3= int(input())
input4= int(input())
print(divisor(input1, input2, input3, input4))

#task 19
def strcheck(a):
  a= a.lower()
  for i in range(97, 107):
    if chr(i) not in a:
      result = 6
      break
  else:
    result = 5
  return result
print("PSG will win the Champions League this season\n"*strcheck(input()))

# task_19

def check(string):
  str_1 = ""
  for i in str_1:
    if ord("A") <= ord(i) <= ord("Z"):
      str_1 += chr(ord(i) + 32)
    else:
      str_1 += i

  compare_alph = "abcdefghij"
  compare_len = ""
  for i in str_1:
    if (i in compare_alph) and (i not in compare_len):
      compare_len += i

  count_alph = 0
  count_len = 0
  for i in compare_alph:
    count_alph += 1
  for j in compare_len:
    count_len += 1

  result = 0
  if count_alph == count_len:
    result = 5
  elif count_alph > count_len:
    result = 6

  return result

str_input = input("Enter the string: ")
limit = check(str_input)
for i in range(limit):
  print("PSG will win the Champions League this season")

#task 20
def bonuscalc(a,b,c,d):
  sum= (c*(b*d//100))
  if c > 30 :
    sum += 10000
  if 20 <= c <= 30:
    total+= 5000
  print(f"{a} earned a bonus of {sum} Taka for {c} goals.")
bonuscalc("Neymar", 1200000, 35, 5)